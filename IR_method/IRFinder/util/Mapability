#!/bin/bash

ulimit -Su 4000
export LANG=C
export LC_ALL=C

set -e

STAREXEC=$1
STARGENOME=$2
FA=$3
LIBEXEC=$4
THREADS=$5

TMPBED=tmp_$$

mkdir "$TMPBED"

TMPCMP=gzip
TMPEXT=gz
if [ -x /usr/bin/lzop ]; then
  TMPCMP=/usr/bin/lzop
  TMPEXT=lzo
fi


#echo ""
echo "<Phase 2: Mapability Calculation>"
date +"%b %d %T ... mapping genome fragments back to genome..."

"$STAREXEC" \
--genomeDir "$STARGENOME" \
--genomeLoad NoSharedMemory \
--runThreadN $THREADS --outStd SAM --outSAMmode NoQS \
--outSAMattributes None \
--outFilterMultimapNmax 1 \
--readFilesIn <("$LIBEXEC/generateReadsError.pl" 70 10 < "$FA") \
> genome_fragments.sam

date +"%b %d %T ... sorting aligned genome fragments..."

samtools sort -@ "$THREADS" genome_fragments.sam > genome_fragments.bam

date +"%b %d %T ... indexing aligned genome fragments..."

samtools index -@ "$THREADS" genome_fragments.bam

date +"%b %d %T ... filtering aligned genome fragments by chromosome/scaffold..."

cat "$STARGENOME/chrName.txt" | \
    xargs --max-args 1 --max-procs "$THREADS" -I{} bash -c "samtools view genome_fragments.bam {}|awk -v tmpdir=\"$TMPBED\" -v tmpcmp=\"$TMPCMP\" -v tmpext=\"$TMPEXT\" 'BEGIN{FS=\"[\\t!]\"; OFS=\"\\t\"}{if ((\$8 == \"70M\") && (\$3 == \$6) && (\$2 == \$5)) {print \$5, \$6-1, \$6+69 | (tmpcmp \" -c1 > \" tmpdir \"/\" \$5 \".bed.\" tmpext ) }}END{close( (tmpcmp \" -c1 > \" tmpdir \"/\" \$5 \".bed.\" tmpext ))}'"

date +"%b %d %T ... merging filtered genome fragments..."

if [ "$TMPEXT" == "gz" ]; then
    find "$TMPBED" -type f -name "*.bed.""$TMPEXT"|xargs --max-args 1 zcat >> genome_fragments.unsorted.bed
elif [ "$TMPEXT" == "lzo" ]; then
    find "$TMPBED" -type f -name "*.bed.""$TMPEXT"|xargs --max-args 1 lzop -cdf >> genome_fragments.unsorted.bed
fi

date +"%b %d %T ... calculating regions for exclusion..."

bedtools genomecov -i genome_fragments.unsorted.bed -bga -g "$STARGENOME/chrNameLength.txt" | \
    awk 'BEGIN{FS=OFS="\t";chr="random"}($1!=chr){chr=$1}($1==chr){print}' | \
    awk 'BEGIN {FS=OFS="\t"} ($4 < 5) {print $1, $2, $3}' | \
    bedtools merge -i stdin | \
    sort -S5G -k1,1 -k2,2n -k3,3n| \
    gzip > MapabilityExclusion.bed.gz

#ls "$TMPBED"/*.bed."$TMPEXT" | xargs --max-args 1 --max-procs "$THREADS" -I{} bash -c "\"$TMPCMP\" -cd < {} | bedtools genomecov -i stdin -bga -g \"$CHRLEN\"| awk 'NR==1{chr=\$1;print}\$1==chr{print}' | awk 'BEGIN {FS=\"\\t\"; OFS=\"\\t\"} (\$4 < 5) {print \$1, \$2, \$3}' | bedtools merge -i stdin > \"$TMPEXCL/\"{}.exclusion"

#find "$TMPBED" -type f -name "*.bed.""$TMPEXT"|cut -d"/" -f3|xargs --max-args 1 --max-procs "$THREADS" -I{} bash -c "\"$TMPCMP\" -cd < \"$TMPBED\"/{} | bedtools genomecov -i stdin -bga -g \"$CHRLEN\"| awk 'NR==1{chr=\$1;print}\$1==chr{print}' | awk 'BEGIN {FS=OFS=\"\\t\"} (\$4 < 5) {print \$1, \$2, \$3}' | bedtools merge -i stdin > \"$TMPEXCL\"/{}.exclusion"

#cat "$TMPEXCL"/*.exclusion | sort -S5G -k1,1 -k2,2n -k3,3n | gzip > MapabilityExclusion.bed.gz

date +"%b %d %T ... cleaning temporary files..."

find "$TMPBED" -type f -name "*.bed.""$TMPEXT"|xargs --max-args 1 --max-procs "$THREADS" rm
rm genome_fragments.*
rm Log.*
rm SJ.out.tab
rmdir "$TMPBED"
